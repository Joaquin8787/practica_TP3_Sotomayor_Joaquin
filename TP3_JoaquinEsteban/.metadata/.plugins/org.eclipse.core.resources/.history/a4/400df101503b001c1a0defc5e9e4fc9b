#include <stdio.h>
#include <stdlib.h>
#include "LinkedList.h"
#include "Employee.h"

/** \brief Parsea los datos los datos de los empleados desde el archivo data.csv (modo texto).
 *
 * \param path char*
 * \param pArrayListEmployee LinkedList*
 * \return int
 *
 */
int parser_EmployeeFromText(FILE* pFile , LinkedList* pArrayListEmployee)
{
	int retorno = 1;
	int cantidad;
	int contador = 0;
	char buffer[4][20];
	LinkedList* auxListEmployee;
	Employee* listaEmpleados = (Employee*) malloc(sizeof(Employee));
	Employee* nuevoEmpleado;

	if(pFile != NULL &&  pArrayListEmployee != NULL){
		// Lectura fantasma
		    fscanf(pFile, "%[^,],%[^,],%[^,],%[^\n]\n", buffer[0], buffer[1], buffer[2], buffer[3]);
		    printf("%s   %s    %s    %s\n\n", buffer[0], buffer[1], buffer[2], buffer[3]);

		    while( !feof(pFile) )
		        {
		            cantidad = fscanf(pFile, "%[^,],%[^,],%[^,],%[^\n]\n", buffer[0], buffer[1], buffer[2], buffer[3]);
		            if( cantidad < 5){
		                break;
		              }
		            nuevoEmpleado = employee_newParametros(atoi(buffer[0]), buffer[1],atoi(buffer[2]),atof(buffer[3]));
		            *(listaEmpleados + contador) = *nuevoEmpleado; //GUARDO EL EMPLEADO PARSEADO EN LA LISTA + 1
		            contador++;

		            auxListEmployee = (Employee*) realloc(listaEmpleados, sizeof(Employee) *(contador+1));
		            if(auxListEmployee == NULL){
		                exit(1);
		            }
		            pArrayListEmployee = auxListEmployee;
		            retorno = 0;
		        }
	}


    return retorno;
}

/** \brief Parsea los datos los datos de los empleados desde el archivo data.csv (modo binario).
 *
 * \param path char*
 * \param pArrayListEmployee LinkedList*
 * \return int
 *
 */
int parser_EmployeeFromBinary(FILE* pFile , LinkedList* pArrayListEmployee)
{

    return 1;
}
