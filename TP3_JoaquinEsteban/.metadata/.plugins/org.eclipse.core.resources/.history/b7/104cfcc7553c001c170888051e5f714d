#include <stdio.h>
#include <stdlib.h>
#include "LinkedList.h"
#include "Controller.h"
#include "Employee.h"

/****************************************************
    Menu:
     1. Cargar los datos de los empleados desde el archivo data.csv (modo texto).
     2. Cargar los datos de los empleados desde el archivo data.csv (modo binario).
     3. Alta de empleado
     4. Modificar datos de empleado
     5. Baja de empleado
     6. Listar empleados
     7. Ordenar empleados
     8. Guardar los datos de los empleados en el archivo data.csv (modo texto).
     9. Guardar los datos de los empleados en el archivo data.csv (modo binario).
    10. Salir
*****************************************************/

int mostrarEmpleados(LinkedList* listaLinkedList);

int main()
{
	setbuf(stdout,NULL);

    int option = 0;

    LinkedList* listaEmpleados = ll_newLinkedList();
    do{
        switch(menuOpciones())
        {
            case 1:
                if(controller_loadFromText("data.csv",listaEmpleados)==0){
                	printf("TODO OK \n");
                }
                else{
                	printf("TODO MAL \n");
                }
                break;
            case 2:
            	mostrarEmpleados(listaEmpleados);
            	break;
        }
    }while(option != 10);
    return 0;
}
int mostrarEmpleados(LinkedList* listaLinkedList){
	int tam;
	Employee* auxEmpleado;
	tam = ll_len(listaLinkedList);
	for(int i= 0; i<tam;i++){
	auxEmpleado = (Employee*) ll_get(listaLinkedList, i+1);
	employee_showOneEmployee(auxEmpleado);
		}
}
int employee_showOneEmployee(Employee* this)
{
    int retorno = 0;
    int id;
    char nombre[128];
    int horasTrabajadas;
    int sueldo;
    if(this!=NULL &&
       employee_getId(this, &id) &&
       employee_getNombre(this, nombre) &&
       employee_getHorasTrabajadas(this, &horasTrabajadas) &&
       employee_getSueldo(this, &sueldo))
    {
        printf(" %4d   %16s     %8d     %10d\n",id,nombre,horasTrabajadas,sueldo);
        retorno=1;
    }
    return retorno;
}
